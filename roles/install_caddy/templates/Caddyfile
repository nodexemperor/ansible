{
	order rate_limit before basicauth
	# to see logs - 
	# tail -100f /var/log/caddy/access.log | while read -r line; do echo -e "$line"; done
	log http.log.access {
		include http.log.access
		output file /var/log/caddy/access.log
		format formatted "\e[97m{status}\e[0m | \e[35m[{ts}]\e[0m \e[96m\e[1m{request>remote_ip}\e[0m \e[31m{request>headers>X-Forwarded-For}\e[0m \e[33m{request>method}\e[0m \e[92m{request>host}\e[32m{request>uri}\e[0m \e[34m{request>headers>Origin}\e[0m \e[39m{request>headers>X-Api-Key}\e[0m" {
				time_format "02/Jan/2006:15:04:05"
		}
	}
	log {
		exclude http.log.access
		output file /var/log/caddy/caddy.log
		format json
	}
}

(rate-limiter) {
	# checks for list of allowed IPs
	# documentation for rate_limit: https://caddyserver.com/docs/modules/http.handlers.rate_limit
	# documentation for xcaddy install: https://github.com/caddyserver/xcaddy#install
	@ipfilter {
		expression {{ app_whitelist }}

		###########################################
		###########################################
		##   Whitelist all of our own servers    ##
		###########################################
		###########################################
{% for ip in groups['ip_list'] %}
		not header X-FORWARDED-FOR {{ ip }}
		not remote_ip {{ ip }}
{% endfor %}

		###########################################
		###########################################
		##     Whitelist for other servers       ##
		###########################################
		###########################################
{% for allowed in white_list %}
	{% if allowed is iterable and (allowed is not string and allowed is not mapping) %}
		{% for allowed_ip in allowed %}
        not header X-FORWARDED-FOR {{ allowed_ip }}
        not remote_ip {{ allowed_ip }}
		{% endfor %}
	{% else  %}
        not header X-FORWARDED-FOR {{ allowed }}
        not remote_ip {{ allowed }}
	{% endif  %}
{% endfor %}
	}

	handle @ipfilter {
		handle_path /cosmos/staking/v1beta1/validators/*/delegations* {
			respond 404
		}
#		handle_path /status* {
#			respond 404
#		}
		rate_limit {remote.ip} 100r/m
		rate_limit {header.X-FORWARDED-FOR} 100r/m
		rate_limit {path*} 150r/m

		rate_limit {remote.ip} 5r/s
		rate_limit {header.X-FORWARDED-FOR} 5r/s
		rate_limit {path*} 7r/s
	}
}

(rpc-header) {
	header {
		Access-Control-Allow-Methods "POST, GET, OPTIONS"
		Access-Control-Allow-Headers "*"
		Access-Control-Allow-Origin "*"
		Access-Control-Max-Age 86400
		Cache-Control no-cache
		Pragma no-cache
		-Server
	}
}

(api-header) {
	header {
		Access-Control-Allow-Origin "*"
	}
}

(blocked) {
# checks for blocked IPs and re-directs them to 403
	@blocked_agents {
		header User-Agent SubQuery-Node
	}
	respond @blocked_agents "<h1>Access Denied</h1>" 403
	
	@blocked_ips {
		remote_ip forwarded {{ blocked_list }}
	}
	respond @blocked_ips "<h1>Access Denied</h1>" 403
}

handle_errors {
	respond "{err.status_code} {err.status_text}"
}

:80 {
	root * /usr/share/caddy
	file_server
}

import /etc/caddy/*.caddy
import /etc/caddy/networks/*.caddy
